"ID" : "9EF20DC4-911A-4213-AB3D-A46A97877C12"
"Status": "Review"
"Create Date" : "04/21/2022"
"Review Date" : "04/21/2022"
"Publish Date" : "04/21/2022"
"Reviewer" : "aweston"
"Author" : "mabrigg"
"Service" : "aks-hci"
"Area"  : "known-issues-upgrade"
"Tags"  : "['proof', 'concept']"
"Source"  : "bugs"
"Source ID"  : "39072488"
"Source URL"  : "https://microsoft.visualstudio.com/OS/_workitems/edit/39072488"
"Target URL"  : "https://docs.microsoft.com/azure-stack/aks-hci/known-issues-upgrade"
"Schema" : "known-issue"
"Issue" : |
  Upgrade of target cluster gets stuck with one or more nodes in an old Kubernetes version.
"Description" : |
  After running Update-AksHciCluster the upgrade process stalls.

"Fix" : |
  Check if there is a machine in your previous  old Kubernetes version stuck inthe Deleting phase.

  ```
  kubectl get machines ...
  ````

  To see the machine which is stuck in a deleting state, run the following command:

  ```bash  
  kubectl get machines -o wide --kubeconfig (Get-KvaConfig).kubeconfig
  ```

  Note the machine with `PHASE` Deleting and `VERSION` matching the previous Kubernetes version.

  To address this problem, you will need the following pieces of information:
  1. Kubernetes version to which you're are upgrading your target cluster.
  2. IP address of the node which is stuck.

  To find this information, run the following cmdlet and command:

  ```powershell
  Get-AksHciCredential -name <target cluster name>
  kubectl get nodes -o wide
  ```
  By default the cmdlet, `Get-AksHciCredential`, writes to `~/.kube/config`. To change the location in the example, you need to provide the location to kubectl as an additional argument. For example, ` kubectl get nodes -o wide --kubeconfig <new-location-path>`.

  The node which needs to be fixed should show `STATUS` `Ready,SchedulingDisabled` Use the `INTERNAL-IP` of this node as the IP address value in the following command below. Use the `VERSION` value from the node with roles `control-plane,master` as the Kubernetes version value.

  ```
  ssh -i (Get-MocConfig).sshPrivateKey -o StrictHostKeyChecking=no  clouduser@<IP address> sudo crictl pull --creds 1516df5a-f1cc-4a6a-856c-03d127b02d05:92684690-48b5-4dce-856d-ef4cccb54f22 ecpacr.azurecr.io/kube-proxy:<Kubernetes version>
  ```

  After running this ssh command, the remaining nodes with the old Kubernetes version should be deleted and the upgrade will proceed.